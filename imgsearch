#!/usr/bin/env python3

import requests
import re
import json
import os
import sys


def search(keywords):
    url = "https://duckduckgo.com/"
    keywords += " cartoon "
    params = {"q": keywords}

    print("Hitting DuckDuckGo for Token")

    #   First make a request to above URL, and parse out the 'vqd'
    #   This is a special token, which should be used in the subsequent request
    res = requests.post(url, data=params)
    searchObj = re.search(r"vqd=([\d-]+)\&", res.text, re.M | re.I)

    if not searchObj:
        print("Token Parsing Failed !")
        return -1

    print("Obtained Token")

    headers = {
        "dnt": "1",
        "accept-encoding": "deflate",
        "x-requested-with": "XMLHttpRequest",
        "accept-language": "en-GB,en-US;q=0.8,en;q=0.6,ms;q=0.4",
        "user-agent": "Mozilla/5.0 (X11; Linux x86_64)",
        "accept": "application/json, text/javascript, */*; q=0.01",
        "referer": "https://duckduckgo.com/",
        "authority": "duckduckgo.com",
    }

    # print(keywords)

    searchw = keywords + " cartoon"
    # print(searchw)
    # exit(1)
    params = (
        ("l", "wt-wt"),
        ("o", "json"),
        ("q", keywords),
        ("vqd", searchObj.group(1)),
        ("f", ",,,"),
        ("p", "2"),
    )

    requestUrl = url + "i.js"

    try:
        res = requests.get(requestUrl, headers=headers, params=params)
        data = json.loads(res.text)
        saveImage(data["results"], keywords)
    except ValueError:
        print("Please try later.")

    # logger.debug("Hitting Url Success : %s", requestUrl)


def saveImage(objs, keyword, limit=5):
    s = 0
    for k, obj in enumerate(objs):
        img_link = obj["thumbnail"]
        img_data = requests.get(img_link).content

        # os.mkdir('downloads')
        filename = "duolingo/images/unsorted/" + keyword + "-" + str(k) + ".png"
        with open(filename, "wb+") as f:
            f.write(img_data)

        s += 1

        print("File " + keyword + ".png successfully downloaded.")
        if s > limit:
            break


if __name__ == "__main__":
    search(sys.argv[-1])
